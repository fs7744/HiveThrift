/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System;
using System.Text;
using Thrift.Protocol;

namespace Hive
{
    public partial class ColumnStatisticsObj : TBase
    {
        public string ColName { get; set; }

        public string ColType { get; set; }

        public ColumnStatisticsData StatsData { get; set; }

        public ColumnStatisticsObj()
        {
        }

        public ColumnStatisticsObj(string colName, string colType, ColumnStatisticsData statsData)
            : this()
        {
            this.ColName = colName;
            this.ColType = colType;
            this.StatsData = statsData;
        }

        public void Read(TProtocol iprot)
        {
            bool isset_colName = false;
            bool isset_colType = false;
            bool isset_statsData = false;
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.String)
                        {
                            ColName = iprot.ReadString();
                            isset_colName = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 2:
                        if (field.Type == TType.String)
                        {
                            ColType = iprot.ReadString();
                            isset_colType = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 3:
                        if (field.Type == TType.Struct)
                        {
                            StatsData = new ColumnStatisticsData();
                            StatsData.Read(iprot);
                            isset_statsData = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
            if (!isset_colName)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
            if (!isset_colType)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
            if (!isset_statsData)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("ColumnStatisticsObj");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            field.Name = "colName";
            field.Type = TType.String;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(ColName);
            oprot.WriteFieldEnd();
            field.Name = "colType";
            field.Type = TType.String;
            field.ID = 2;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(ColType);
            oprot.WriteFieldEnd();
            field.Name = "statsData";
            field.Type = TType.Struct;
            field.ID = 3;
            oprot.WriteFieldBegin(field);
            StatsData.Write(oprot);
            oprot.WriteFieldEnd();
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("ColumnStatisticsObj(");
            sb.Append("ColName: ");
            sb.Append(ColName);
            sb.Append(",ColType: ");
            sb.Append(ColType);
            sb.Append(",StatsData: ");
            sb.Append(StatsData == null ? "<null>" : StatsData.ToString());
            sb.Append(")");
            return sb.ToString();
        }
    }
}