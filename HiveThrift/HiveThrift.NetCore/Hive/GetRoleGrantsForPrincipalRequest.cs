/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System;
using System.Text;
using Thrift.Protocol;

namespace Hive
{
    public partial class GetRoleGrantsForPrincipalRequest : TBase
    {
        public string Principal_name { get; set; }

        /// <summary>
        ///
        /// <seealso cref="PrincipalType"/>
        /// </summary>
        public PrincipalType Principal_type { get; set; }

        public GetRoleGrantsForPrincipalRequest()
        {
        }

        public GetRoleGrantsForPrincipalRequest(string principal_name, PrincipalType principal_type)
            : this()
        {
            this.Principal_name = principal_name;
            this.Principal_type = principal_type;
        }

        public void Read(TProtocol iprot)
        {
            bool isset_principal_name = false;
            bool isset_principal_type = false;
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.String)
                        {
                            Principal_name = iprot.ReadString();
                            isset_principal_name = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 2:
                        if (field.Type == TType.I32)
                        {
                            Principal_type = (PrincipalType)iprot.ReadI32();
                            isset_principal_type = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
            if (!isset_principal_name)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
            if (!isset_principal_type)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("GetRoleGrantsForPrincipalRequest");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            field.Name = "principal_name";
            field.Type = TType.String;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            oprot.WriteString(Principal_name);
            oprot.WriteFieldEnd();
            field.Name = "principal_type";
            field.Type = TType.I32;
            field.ID = 2;
            oprot.WriteFieldBegin(field);
            oprot.WriteI32((int)Principal_type);
            oprot.WriteFieldEnd();
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("GetRoleGrantsForPrincipalRequest(");
            sb.Append("Principal_name: ");
            sb.Append(Principal_name);
            sb.Append(",Principal_type: ");
            sb.Append(Principal_type);
            sb.Append(")");
            return sb.ToString();
        }
    }
}