/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System;
using System.Text;
using Thrift.Protocol;

namespace Hive
{
#if !SILVERLIGHT

    
#endif
    public partial class RolePrincipalGrant : TBase
    {
        private string _roleName;
        private string _principalName;
        private PrincipalType _principalType;
        private bool _grantOption;
        private int _grantTime;
        private string _grantorName;
        private PrincipalType _grantorPrincipalType;

        public string RoleName
        {
            get
            {
                return _roleName;
            }
            set
            {
                __isset.roleName = true;
                this._roleName = value;
            }
        }

        public string PrincipalName
        {
            get
            {
                return _principalName;
            }
            set
            {
                __isset.principalName = true;
                this._principalName = value;
            }
        }

        /// <summary>
        ///
        /// <seealso cref="PrincipalType"/>
        /// </summary>
        public PrincipalType PrincipalType
        {
            get
            {
                return _principalType;
            }
            set
            {
                __isset.principalType = true;
                this._principalType = value;
            }
        }

        public bool GrantOption
        {
            get
            {
                return _grantOption;
            }
            set
            {
                __isset.grantOption = true;
                this._grantOption = value;
            }
        }

        public int GrantTime
        {
            get
            {
                return _grantTime;
            }
            set
            {
                __isset.grantTime = true;
                this._grantTime = value;
            }
        }

        public string GrantorName
        {
            get
            {
                return _grantorName;
            }
            set
            {
                __isset.grantorName = true;
                this._grantorName = value;
            }
        }

        /// <summary>
        ///
        /// <seealso cref="PrincipalType"/>
        /// </summary>
        public PrincipalType GrantorPrincipalType
        {
            get
            {
                return _grantorPrincipalType;
            }
            set
            {
                __isset.grantorPrincipalType = true;
                this._grantorPrincipalType = value;
            }
        }

        public Isset __isset;
#if !SILVERLIGHT

        
#endif
        public struct Isset
        {
            public bool roleName;
            public bool principalName;
            public bool principalType;
            public bool grantOption;
            public bool grantTime;
            public bool grantorName;
            public bool grantorPrincipalType;
        }

        public RolePrincipalGrant()
        {
        }

        public void Read(TProtocol iprot)
        {
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.String)
                        {
                            RoleName = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 2:
                        if (field.Type == TType.String)
                        {
                            PrincipalName = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 3:
                        if (field.Type == TType.I32)
                        {
                            PrincipalType = (PrincipalType)iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 4:
                        if (field.Type == TType.Bool)
                        {
                            GrantOption = iprot.ReadBool();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 5:
                        if (field.Type == TType.I32)
                        {
                            GrantTime = iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 6:
                        if (field.Type == TType.String)
                        {
                            GrantorName = iprot.ReadString();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 7:
                        if (field.Type == TType.I32)
                        {
                            GrantorPrincipalType = (PrincipalType)iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("RolePrincipalGrant");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            if (RoleName != null && __isset.roleName)
            {
                field.Name = "roleName";
                field.Type = TType.String;
                field.ID = 1;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(RoleName);
                oprot.WriteFieldEnd();
            }
            if (PrincipalName != null && __isset.principalName)
            {
                field.Name = "principalName";
                field.Type = TType.String;
                field.ID = 2;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(PrincipalName);
                oprot.WriteFieldEnd();
            }
            if (__isset.principalType)
            {
                field.Name = "principalType";
                field.Type = TType.I32;
                field.ID = 3;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32((int)PrincipalType);
                oprot.WriteFieldEnd();
            }
            if (__isset.grantOption)
            {
                field.Name = "grantOption";
                field.Type = TType.Bool;
                field.ID = 4;
                oprot.WriteFieldBegin(field);
                oprot.WriteBool(GrantOption);
                oprot.WriteFieldEnd();
            }
            if (__isset.grantTime)
            {
                field.Name = "grantTime";
                field.Type = TType.I32;
                field.ID = 5;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32(GrantTime);
                oprot.WriteFieldEnd();
            }
            if (GrantorName != null && __isset.grantorName)
            {
                field.Name = "grantorName";
                field.Type = TType.String;
                field.ID = 6;
                oprot.WriteFieldBegin(field);
                oprot.WriteString(GrantorName);
                oprot.WriteFieldEnd();
            }
            if (__isset.grantorPrincipalType)
            {
                field.Name = "grantorPrincipalType";
                field.Type = TType.I32;
                field.ID = 7;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32((int)GrantorPrincipalType);
                oprot.WriteFieldEnd();
            }
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("RolePrincipalGrant(");
            sb.Append("RoleName: ");
            sb.Append(RoleName);
            sb.Append(",PrincipalName: ");
            sb.Append(PrincipalName);
            sb.Append(",PrincipalType: ");
            sb.Append(PrincipalType);
            sb.Append(",GrantOption: ");
            sb.Append(GrantOption);
            sb.Append(",GrantTime: ");
            sb.Append(GrantTime);
            sb.Append(",GrantorName: ");
            sb.Append(GrantorName);
            sb.Append(",GrantorPrincipalType: ");
            sb.Append(GrantorPrincipalType);
            sb.Append(")");
            return sb.ToString();
        }
    }
}