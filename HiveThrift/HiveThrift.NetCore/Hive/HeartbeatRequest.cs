/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System;
using System.Text;
using Thrift.Protocol;

namespace Hive
{
#if !SILVERLIGHT

    
#endif
    public partial class HeartbeatRequest : TBase
    {
        private long _lockid;
        private long _txnid;

        public long Lockid
        {
            get
            {
                return _lockid;
            }
            set
            {
                __isset.lockid = true;
                this._lockid = value;
            }
        }

        public long Txnid
        {
            get
            {
                return _txnid;
            }
            set
            {
                __isset.txnid = true;
                this._txnid = value;
            }
        }

        public Isset __isset;
#if !SILVERLIGHT

        
#endif
        public struct Isset
        {
            public bool lockid;
            public bool txnid;
        }

        public HeartbeatRequest()
        {
        }

        public void Read(TProtocol iprot)
        {
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.I64)
                        {
                            Lockid = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 2:
                        if (field.Type == TType.I64)
                        {
                            Txnid = iprot.ReadI64();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("HeartbeatRequest");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            if (__isset.lockid)
            {
                field.Name = "lockid";
                field.Type = TType.I64;
                field.ID = 1;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Lockid);
                oprot.WriteFieldEnd();
            }
            if (__isset.txnid)
            {
                field.Name = "txnid";
                field.Type = TType.I64;
                field.ID = 2;
                oprot.WriteFieldBegin(field);
                oprot.WriteI64(Txnid);
                oprot.WriteFieldEnd();
            }
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("HeartbeatRequest(");
            sb.Append("Lockid: ");
            sb.Append(Lockid);
            sb.Append(",Txnid: ");
            sb.Append(Txnid);
            sb.Append(")");
            return sb.ToString();
        }
    }
}