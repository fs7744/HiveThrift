/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System;
using System.Text;
using Thrift.Collections;
using Thrift.Protocol;

namespace Hive
{
#if !SILVERLIGHT

    
#endif
    public partial class HeartbeatTxnRangeResponse : TBase
    {
        public THashSet<long> Aborted { get; set; }

        public THashSet<long> Nosuch { get; set; }

        public HeartbeatTxnRangeResponse()
        {
        }

        public HeartbeatTxnRangeResponse(THashSet<long> aborted, THashSet<long> nosuch)
            : this()
        {
            this.Aborted = aborted;
            this.Nosuch = nosuch;
        }

        public void Read(TProtocol iprot)
        {
            bool isset_aborted = false;
            bool isset_nosuch = false;
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.Set)
                        {
                            {
                                Aborted = new THashSet<long>();
                                TSet _set217 = iprot.ReadSetBegin();
                                for (int _i218 = 0; _i218 < _set217.Count; ++_i218)
                                {
                                    long _elem219 = 0;
                                    _elem219 = iprot.ReadI64();
                                    Aborted.Add(_elem219);
                                }
                                iprot.ReadSetEnd();
                            }
                            isset_aborted = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 2:
                        if (field.Type == TType.Set)
                        {
                            {
                                Nosuch = new THashSet<long>();
                                TSet _set220 = iprot.ReadSetBegin();
                                for (int _i221 = 0; _i221 < _set220.Count; ++_i221)
                                {
                                    long _elem222 = 0;
                                    _elem222 = iprot.ReadI64();
                                    Nosuch.Add(_elem222);
                                }
                                iprot.ReadSetEnd();
                            }
                            isset_nosuch = true;
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
            if (!isset_aborted)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
            if (!isset_nosuch)
                throw new TProtocolException(TProtocolException.INVALID_DATA);
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("HeartbeatTxnRangeResponse");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            field.Name = "aborted";
            field.Type = TType.Set;
            field.ID = 1;
            oprot.WriteFieldBegin(field);
            {
                oprot.WriteSetBegin(new TSet(TType.I64, Aborted.Count));
                foreach (long _iter223 in Aborted)
                {
                    oprot.WriteI64(_iter223);
                }
                oprot.WriteSetEnd();
            }
            oprot.WriteFieldEnd();
            field.Name = "nosuch";
            field.Type = TType.Set;
            field.ID = 2;
            oprot.WriteFieldBegin(field);
            {
                oprot.WriteSetBegin(new TSet(TType.I64, Nosuch.Count));
                foreach (long _iter224 in Nosuch)
                {
                    oprot.WriteI64(_iter224);
                }
                oprot.WriteSetEnd();
            }
            oprot.WriteFieldEnd();
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("HeartbeatTxnRangeResponse(");
            sb.Append("Aborted: ");
            sb.Append(Aborted);
            sb.Append(",Nosuch: ");
            sb.Append(Nosuch);
            sb.Append(")");
            return sb.ToString();
        }
    }
}