/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System;
using System.Text;
using Thrift.Protocol;

namespace Hive
{
#if !SILVERLIGHT

    
#endif
    public partial class GrantRevokePrivilegeRequest : TBase
    {
        private GrantRevokeType _requestType;
        private PrivilegeBag _privileges;
        private bool _revokeGrantOption;

        /// <summary>
        ///
        /// <seealso cref="GrantRevokeType"/>
        /// </summary>
        public GrantRevokeType RequestType
        {
            get
            {
                return _requestType;
            }
            set
            {
                __isset.requestType = true;
                this._requestType = value;
            }
        }

        public PrivilegeBag Privileges
        {
            get
            {
                return _privileges;
            }
            set
            {
                __isset.privileges = true;
                this._privileges = value;
            }
        }

        public bool RevokeGrantOption
        {
            get
            {
                return _revokeGrantOption;
            }
            set
            {
                __isset.revokeGrantOption = true;
                this._revokeGrantOption = value;
            }
        }

        public Isset __isset;
#if !SILVERLIGHT

        
#endif
        public struct Isset
        {
            public bool requestType;
            public bool privileges;
            public bool revokeGrantOption;
        }

        public GrantRevokePrivilegeRequest()
        {
        }

        public void Read(TProtocol iprot)
        {
            TField field;
            iprot.ReadStructBegin();
            while (true)
            {
                field = iprot.ReadFieldBegin();
                if (field.Type == TType.Stop)
                {
                    break;
                }
                switch (field.ID)
                {
                    case 1:
                        if (field.Type == TType.I32)
                        {
                            RequestType = (GrantRevokeType)iprot.ReadI32();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 2:
                        if (field.Type == TType.Struct)
                        {
                            Privileges = new PrivilegeBag();
                            Privileges.Read(iprot);
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    case 3:
                        if (field.Type == TType.Bool)
                        {
                            RevokeGrantOption = iprot.ReadBool();
                        }
                        else
                        {
                            TProtocolUtil.Skip(iprot, field.Type);
                        }
                        break;

                    default:
                        TProtocolUtil.Skip(iprot, field.Type);
                        break;
                }
                iprot.ReadFieldEnd();
            }
            iprot.ReadStructEnd();
        }

        public void Write(TProtocol oprot)
        {
            TStruct struc = new TStruct("GrantRevokePrivilegeRequest");
            oprot.WriteStructBegin(struc);
            TField field = new TField();
            if (__isset.requestType)
            {
                field.Name = "requestType";
                field.Type = TType.I32;
                field.ID = 1;
                oprot.WriteFieldBegin(field);
                oprot.WriteI32((int)RequestType);
                oprot.WriteFieldEnd();
            }
            if (Privileges != null && __isset.privileges)
            {
                field.Name = "privileges";
                field.Type = TType.Struct;
                field.ID = 2;
                oprot.WriteFieldBegin(field);
                Privileges.Write(oprot);
                oprot.WriteFieldEnd();
            }
            if (__isset.revokeGrantOption)
            {
                field.Name = "revokeGrantOption";
                field.Type = TType.Bool;
                field.ID = 3;
                oprot.WriteFieldBegin(field);
                oprot.WriteBool(RevokeGrantOption);
                oprot.WriteFieldEnd();
            }
            oprot.WriteFieldStop();
            oprot.WriteStructEnd();
        }

        public override string ToString()
        {
            StringBuilder sb = new StringBuilder("GrantRevokePrivilegeRequest(");
            sb.Append("RequestType: ");
            sb.Append(RequestType);
            sb.Append(",Privileges: ");
            sb.Append(Privileges == null ? "<null>" : Privileges.ToString());
            sb.Append(",RevokeGrantOption: ");
            sb.Append(RevokeGrantOption);
            sb.Append(")");
            return sb.ToString();
        }
    }
}